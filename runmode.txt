1-run_mode
5-map_number
0-include_blocked_squares(1=true)
0-beacon_type
0-max_beacon_shape
0-shape_to_force
0-amount_to_force_min
25-amount_to_force_max
1-no_legend
0-random_seed(0=true_random)
100-number_of_attempts

Use this file to set the mode of operation for the program.
Each line at the top should start with a number and not contain any blank spaces.
The program will strip the number off each line.

Line 1 (run mode):
0) Run one set of maps according to the parameters specified in lines 2-11.
1) Run infinite sets of maps with randomized parameters after the first set.
   Map, beacon shape and type, force shape, force min and force max will be
   randomized. Parameters from lines 3, 9 and 10 will be kept. Entry from
   line 11 will be used to determine the size of each new set. Program will
   need to be killed at some point as it will never stop on its own. I use
   Ctrl_C on the cmd prompt to kill it. The purpose is just to continuously
   look for improved maps and update bestmaps.txt any time one is found.
2) Same as above, except map, beacon shape and beacon type will cycle through
   all possible values instead of being randomized, starting from what is
   specified on lines 2, 4 and 5.
3) Same as above, but force shape and counts will also be cycled. I strongly
   recommend setting line 11 to a small number when using this option. Note
   that this mode only displays a map if it is a new best. Instead, it spews
   out a running status update of exactly what it is checking next.
4) Display one map from bestmaps.txt according to data on lines 2, 4 and 5.
5) Same as 4, but display maps for all valid line 2 values.
6) Same as 4, but display maps for all valid line 4 values.
7) Same as 4, but display maps for all valid line 5 values.
8) Same as 4, but display maps for all valid line 2 and 4 values.
9) Same as 4, but display maps for all valid line 2 and 5 values.
10) Same as 4, but display maps for all valid line 4 and 5 values.
11) Display all maps from bestmaps.txt.
99) Debug mode. I use this when debugging new features/changes, so what it
    does is always changing.

Line 2:
1) Tutorial   2) Flesh   3) Tronne   4) Candyland   5) M&M
(Anything else results in manual entry of parameters.)

Line 3:
0) Only use open squares. (value of 1 in the <map>.txt file)
1) Include valid, but currently blockaded squares. (value 1 or 2 in <map>.txt)

Line 4 (beacon type):
0) speed    1) production    2) efficiency    3) speed/prod mixed

Line 5 (highest beacon shape allowed):
0) box    1) knight   2) arrow   3) wall   4) donut

Line 6 (which shape to force):
0) box    1) knight   2) arrow   3) wall   4) donut

Lines 7 (minimum) and 8 (maximum):
X) Force at least X (0-999) amount of Line 5's shape.

Line 9:
0) Print the Legend.
1) Suppress the Legend.

Line 10 (randomizer seed):
X) Set to 0 to be seeded from the clock. Set a value to specify the seed.

Line 11 (number of attempts):
X) Run through X attempts, then show the best found. (NOTE: for any runs where
   the beacon type is set to 3, the value of line 11 will be divided by 1,000.
   This is due to speed/prod mixed calculations taking 1,000 times longer to
   complete. This is true for both runs using line 4's value and runs using
   random or cycling values.)

I prefer launching the program from a command prompt, though you can set up
a batch file or Windows shortcut if you prefer.

I launch the file as such (your directories will probably be different):

c:\dev\ngu-indust\Alchemy.exe

Just make sure Alchemy.exe, runmode.txt and the <map>.txt files
are all in the same directory.

